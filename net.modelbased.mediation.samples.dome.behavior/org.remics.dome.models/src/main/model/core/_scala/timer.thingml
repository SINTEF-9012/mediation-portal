import "../timer.thingml"

datatype ScalaTimer
@scala_type "org.thingml.utils.timer.Timer";

// Manage a set of software timers.
thing TimerScala includes Timer
@pim "Timer"
@platform "scala"
@scala_trait "org.thingml.utils.timer.TimerTask"
@thingml_maven_dep "org.thingml.utils"
{

    property scalaTimer : ScalaTimer

    function onTimeout()@override "true" 
    do
        print("timeout ")
        timer!timer_timeout()
    end
    
    function cancel()
    do
      print("cancel ")
      if(not (scalaTimer == 'null'))
      do
        '' & scalaTimer & ' ! "cancel"'
      end
    end
    
    function start(delay : Integer)
    do
        print("start " + delay)
        cancel()
        scalaTimer = 'new org.thingml.utils.timer.Timer(this,' & delay & ').start'
    end
    
    statechart SoftTimer init default {
        state default {
          //on entry print("debug timer on entry")
            
          internal start
            event m : timer?timer_start
            guard m.delay > 0
            action do
                //print("debug timer")
                start(m.delay)
            end
            
          internal cancel
            event m : timer?timer_cancel
            action cancel()    
        }
    }
}